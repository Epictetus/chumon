- roles = Role.all
- managers = Role.managers

= form_for @account do |f|
  -if @account.errors.any?
    #error_explanation
      %h2= "#{pluralize(@account.errors.count, "error")} prohibited this account from being saved:"
      %ul
        - @account.errors.full_messages.each do |msg|
          %li= msg

  .field
    = f.label :login
    = f.text_field :login
  .field
    = f.label :password
    = f.text_field :password
  .field
    = f.label :accounts_roles
    #accounts_roles{num:@account.accounts_roles.count}
      = f.fields_for :accounts_roles do |accounts_role_field|
        - accounts_role = accounts_role_field.object
        .accounts_role_field
          - if accounts_role.customer?
            = accounts_role_field.select :role_id, [[]].concat(roles.collect {|role| [role.name, role.id]}), {}, disabled:true
          - else
            = accounts_role_field.select :role_id, [[]].concat(managers.collect {|role| [role.name, role.id]})
          = accounts_role_field.hidden_field :_destroy, class:'_destroy'
          %br
  .action
    %span#add_role
      [+]
  .actions
    = f.submit 'Save', id:'account_submit'

:javascript

  roles = function () {
    return #{managers.collect { |role| role.attributes }.to_json};
  }
